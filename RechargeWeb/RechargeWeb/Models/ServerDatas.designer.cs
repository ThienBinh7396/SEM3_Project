#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RechargeWeb.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="aspnet-RechargeWeb-20190424021345")]
	public partial class ServerDatasDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertcustomer(customer instance);
    partial void Updatecustomer(customer instance);
    partial void Deletecustomer(customer instance);
    partial void Insertmobile_network(mobile_network instance);
    partial void Updatemobile_network(mobile_network instance);
    partial void Deletemobile_network(mobile_network instance);
    partial void Insertpayment(payment instance);
    partial void Updatepayment(payment instance);
    partial void Deletepayment(payment instance);
    partial void Insertrole(role instance);
    partial void Updaterole(role instance);
    partial void Deleterole(role instance);
    partial void Inserttype_service(type_service instance);
    partial void Updatetype_service(type_service instance);
    partial void Deletetype_service(type_service instance);
    partial void Inserthistory_detail(history_detail instance);
    partial void Updatehistory_detail(history_detail instance);
    partial void Deletehistory_detail(history_detail instance);
    partial void Insertemployee(employee instance);
    partial void Updateemployee(employee instance);
    partial void Deleteemployee(employee instance);
    partial void Inserthistory(history instance);
    partial void Updatehistory(history instance);
    partial void Deletehistory(history instance);
    partial void Insertservice(service instance);
    partial void Updateservice(service instance);
    partial void Deleteservice(service instance);
    partial void Insertfeedback(feedback instance);
    partial void Updatefeedback(feedback instance);
    partial void Deletefeedback(feedback instance);
    #endregion
		
		public ServerDatasDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["aspnet_RechargeWeb_20190424021345ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ServerDatasDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ServerDatasDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ServerDatasDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ServerDatasDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<customer> customers
		{
			get
			{
				return this.GetTable<customer>();
			}
		}
		
		public System.Data.Linq.Table<mobile_network> mobile_networks
		{
			get
			{
				return this.GetTable<mobile_network>();
			}
		}
		
		public System.Data.Linq.Table<payment> payments
		{
			get
			{
				return this.GetTable<payment>();
			}
		}
		
		public System.Data.Linq.Table<role> roles
		{
			get
			{
				return this.GetTable<role>();
			}
		}
		
		public System.Data.Linq.Table<type_service> type_services
		{
			get
			{
				return this.GetTable<type_service>();
			}
		}
		
		public System.Data.Linq.Table<history_detail> history_details
		{
			get
			{
				return this.GetTable<history_detail>();
			}
		}
		
		public System.Data.Linq.Table<employee> employees
		{
			get
			{
				return this.GetTable<employee>();
			}
		}
		
		public System.Data.Linq.Table<history> histories
		{
			get
			{
				return this.GetTable<history>();
			}
		}
		
		public System.Data.Linq.Table<service> services
		{
			get
			{
				return this.GetTable<service>();
			}
		}
		
		public System.Data.Linq.Table<feedback> feedbacks
		{
			get
			{
				return this.GetTable<feedback>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.customer")]
	public partial class customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _phone_number;
		
		private string _email;
		
		private string _create_at;
		
		private string _update_at;
		
		private string _password;
		
		private int _id_network;
		
		private double _balance;
		
		private EntitySet<history> _histories;
		
		private EntityRef<mobile_network> _mobile_network;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onphone_numberChanging(string value);
    partial void Onphone_numberChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Oncreate_atChanging(string value);
    partial void Oncreate_atChanged();
    partial void Onupdate_atChanging(string value);
    partial void Onupdate_atChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onid_networkChanging(int value);
    partial void Onid_networkChanged();
    partial void OnbalanceChanging(double value);
    partial void OnbalanceChanged();
    #endregion
		
		public customer()
		{
			this._histories = new EntitySet<history>(new Action<history>(this.attach_histories), new Action<history>(this.detach_histories));
			this._mobile_network = default(EntityRef<mobile_network>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_number", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string phone_number
		{
			get
			{
				return this._phone_number;
			}
			set
			{
				if ((this._phone_number != value))
				{
					this.Onphone_numberChanging(value);
					this.SendPropertyChanging();
					this._phone_number = value;
					this.SendPropertyChanged("phone_number");
					this.Onphone_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_create_at", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string create_at
		{
			get
			{
				return this._create_at;
			}
			set
			{
				if ((this._create_at != value))
				{
					this.Oncreate_atChanging(value);
					this.SendPropertyChanging();
					this._create_at = value;
					this.SendPropertyChanged("create_at");
					this.Oncreate_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_at", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string update_at
		{
			get
			{
				return this._update_at;
			}
			set
			{
				if ((this._update_at != value))
				{
					this.Onupdate_atChanging(value);
					this.SendPropertyChanging();
					this._update_at = value;
					this.SendPropertyChanged("update_at");
					this.Onupdate_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_network", DbType="Int NOT NULL")]
		public int id_network
		{
			get
			{
				return this._id_network;
			}
			set
			{
				if ((this._id_network != value))
				{
					if (this._mobile_network.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_networkChanging(value);
					this.SendPropertyChanging();
					this._id_network = value;
					this.SendPropertyChanged("id_network");
					this.Onid_networkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_balance", DbType="Float NOT NULL")]
		public double balance
		{
			get
			{
				return this._balance;
			}
			set
			{
				if ((this._balance != value))
				{
					this.OnbalanceChanging(value);
					this.SendPropertyChanging();
					this._balance = value;
					this.SendPropertyChanged("balance");
					this.OnbalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_history", Storage="_histories", ThisKey="id", OtherKey="id_customer")]
		public EntitySet<history> histories
		{
			get
			{
				return this._histories;
			}
			set
			{
				this._histories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mobile_network_customer", Storage="_mobile_network", ThisKey="id_network", OtherKey="id", IsForeignKey=true)]
		public mobile_network mobile_network
		{
			get
			{
				return this._mobile_network.Entity;
			}
			set
			{
				mobile_network previousValue = this._mobile_network.Entity;
				if (((previousValue != value) 
							|| (this._mobile_network.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mobile_network.Entity = null;
						previousValue.customers.Remove(this);
					}
					this._mobile_network.Entity = value;
					if ((value != null))
					{
						value.customers.Add(this);
						this._id_network = value.id;
					}
					else
					{
						this._id_network = default(int);
					}
					this.SendPropertyChanged("mobile_network");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_histories(history entity)
		{
			this.SendPropertyChanging();
			entity.customer = this;
		}
		
		private void detach_histories(history entity)
		{
			this.SendPropertyChanging();
			entity.customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mobile_network")]
	public partial class mobile_network : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _thumbnail;
		
		private string @__identity;
		
		private string _country;
		
		private EntitySet<customer> _customers;
		
		private EntitySet<service> _services;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnthumbnailChanging(string value);
    partial void OnthumbnailChanged();
    partial void On_identityChanging(string value);
    partial void On_identityChanged();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    #endregion
		
		public mobile_network()
		{
			this._customers = new EntitySet<customer>(new Action<customer>(this.attach_customers), new Action<customer>(this.detach_customers));
			this._services = new EntitySet<service>(new Action<service>(this.attach_services), new Action<service>(this.detach_services));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thumbnail", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string thumbnail
		{
			get
			{
				return this._thumbnail;
			}
			set
			{
				if ((this._thumbnail != value))
				{
					this.OnthumbnailChanging(value);
					this.SendPropertyChanging();
					this._thumbnail = value;
					this.SendPropertyChanged("thumbnail");
					this.OnthumbnailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_identity]", Storage="__identity", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string _identity
		{
			get
			{
				return this.@__identity;
			}
			set
			{
				if ((this.@__identity != value))
				{
					this.On_identityChanging(value);
					this.SendPropertyChanging();
					this.@__identity = value;
					this.SendPropertyChanged("_identity");
					this.On_identityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mobile_network_customer", Storage="_customers", ThisKey="id", OtherKey="id_network")]
		public EntitySet<customer> customers
		{
			get
			{
				return this._customers;
			}
			set
			{
				this._customers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mobile_network_service", Storage="_services", ThisKey="id", OtherKey="id_mobile_network")]
		public EntitySet<service> services
		{
			get
			{
				return this._services;
			}
			set
			{
				this._services.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_customers(customer entity)
		{
			this.SendPropertyChanging();
			entity.mobile_network = this;
		}
		
		private void detach_customers(customer entity)
		{
			this.SendPropertyChanging();
			entity.mobile_network = null;
		}
		
		private void attach_services(service entity)
		{
			this.SendPropertyChanging();
			entity.mobile_network = this;
		}
		
		private void detach_services(service entity)
		{
			this.SendPropertyChanging();
			entity.mobile_network = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.payment")]
	public partial class payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _type;
		
		private int _provider;
		
		private EntitySet<history> _histories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OnproviderChanging(int value);
    partial void OnproviderChanged();
    #endregion
		
		public payment()
		{
			this._histories = new EntitySet<history>(new Action<history>(this.attach_histories), new Action<history>(this.detach_histories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_provider", DbType="Int NOT NULL")]
		public int provider
		{
			get
			{
				return this._provider;
			}
			set
			{
				if ((this._provider != value))
				{
					this.OnproviderChanging(value);
					this.SendPropertyChanging();
					this._provider = value;
					this.SendPropertyChanged("provider");
					this.OnproviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="payment_history", Storage="_histories", ThisKey="id", OtherKey="payment_method")]
		public EntitySet<history> histories
		{
			get
			{
				return this._histories;
			}
			set
			{
				this._histories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_histories(history entity)
		{
			this.SendPropertyChanging();
			entity.payment = this;
		}
		
		private void detach_histories(history entity)
		{
			this.SendPropertyChanging();
			entity.payment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.role")]
	public partial class role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _type;
		
		private EntitySet<employee> _employees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    #endregion
		
		public role()
		{
			this._employees = new EntitySet<employee>(new Action<employee>(this.attach_employees), new Action<employee>(this.detach_employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="role_employee", Storage="_employees", ThisKey="id", OtherKey="role")]
		public EntitySet<employee> employees
		{
			get
			{
				return this._employees;
			}
			set
			{
				this._employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_employees(employee entity)
		{
			this.SendPropertyChanging();
			entity.role1 = this;
		}
		
		private void detach_employees(employee entity)
		{
			this.SendPropertyChanging();
			entity.role1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.type_service")]
	public partial class type_service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _title;
		
		private EntitySet<service> _services;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    #endregion
		
		public type_service()
		{
			this._services = new EntitySet<service>(new Action<service>(this.attach_services), new Action<service>(this.detach_services));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="type_service_service", Storage="_services", ThisKey="id", OtherKey="type_id")]
		public EntitySet<service> services
		{
			get
			{
				return this._services;
			}
			set
			{
				this._services.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_services(service entity)
		{
			this.SendPropertyChanging();
			entity.type_service = this;
		}
		
		private void detach_services(service entity)
		{
			this.SendPropertyChanging();
			entity.type_service = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.history_detail")]
	public partial class history_detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _id_history;
		
		private int _id_service;
		
		private double _price;
		
		private System.Nullable<int> _qty;
		
		private EntityRef<history> _history;
		
		private EntityRef<service> _service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onid_historyChanging(int value);
    partial void Onid_historyChanged();
    partial void Onid_serviceChanging(int value);
    partial void Onid_serviceChanged();
    partial void OnpriceChanging(double value);
    partial void OnpriceChanged();
    partial void OnqtyChanging(System.Nullable<int> value);
    partial void OnqtyChanged();
    #endregion
		
		public history_detail()
		{
			this._history = default(EntityRef<history>);
			this._service = default(EntityRef<service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_history", DbType="Int NOT NULL")]
		public int id_history
		{
			get
			{
				return this._id_history;
			}
			set
			{
				if ((this._id_history != value))
				{
					if (this._history.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_historyChanging(value);
					this.SendPropertyChanging();
					this._id_history = value;
					this.SendPropertyChanged("id_history");
					this.Onid_historyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_service", DbType="Int NOT NULL")]
		public int id_service
		{
			get
			{
				return this._id_service;
			}
			set
			{
				if ((this._id_service != value))
				{
					if (this._service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_serviceChanging(value);
					this.SendPropertyChanging();
					this._id_service = value;
					this.SendPropertyChanged("id_service");
					this.Onid_serviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Float NOT NULL")]
		public double price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qty", DbType="Int")]
		public System.Nullable<int> qty
		{
			get
			{
				return this._qty;
			}
			set
			{
				if ((this._qty != value))
				{
					this.OnqtyChanging(value);
					this.SendPropertyChanging();
					this._qty = value;
					this.SendPropertyChanged("qty");
					this.OnqtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="history_history_detail", Storage="_history", ThisKey="id_history", OtherKey="id", IsForeignKey=true)]
		public history history
		{
			get
			{
				return this._history.Entity;
			}
			set
			{
				history previousValue = this._history.Entity;
				if (((previousValue != value) 
							|| (this._history.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._history.Entity = null;
						previousValue.history_details.Remove(this);
					}
					this._history.Entity = value;
					if ((value != null))
					{
						value.history_details.Add(this);
						this._id_history = value.id;
					}
					else
					{
						this._id_history = default(int);
					}
					this.SendPropertyChanged("history");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="service_history_detail", Storage="_service", ThisKey="id_service", OtherKey="id", IsForeignKey=true)]
		public service service
		{
			get
			{
				return this._service.Entity;
			}
			set
			{
				service previousValue = this._service.Entity;
				if (((previousValue != value) 
							|| (this._service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._service.Entity = null;
						previousValue.history_details.Remove(this);
					}
					this._service.Entity = value;
					if ((value != null))
					{
						value.history_details.Add(this);
						this._id_service = value.id;
					}
					else
					{
						this._id_service = default(int);
					}
					this.SendPropertyChanged("service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.employee")]
	public partial class employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _phone_number;
		
		private string _email;
		
		private string _create_at;
		
		private string _update_at;
		
		private int _role;
		
		private string _password;
		
		private string _background;
		
		private string _color;
		
		private EntitySet<history> _histories;
		
		private EntityRef<role> _role1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onphone_numberChanging(string value);
    partial void Onphone_numberChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Oncreate_atChanging(string value);
    partial void Oncreate_atChanged();
    partial void Onupdate_atChanging(string value);
    partial void Onupdate_atChanged();
    partial void OnroleChanging(int value);
    partial void OnroleChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnbackgroundChanging(string value);
    partial void OnbackgroundChanged();
    partial void OncolorChanging(string value);
    partial void OncolorChanged();
    #endregion
		
		public employee()
		{
			this._histories = new EntitySet<history>(new Action<history>(this.attach_histories), new Action<history>(this.detach_histories));
			this._role1 = default(EntityRef<role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(255)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_number", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string phone_number
		{
			get
			{
				return this._phone_number;
			}
			set
			{
				if ((this._phone_number != value))
				{
					this.Onphone_numberChanging(value);
					this.SendPropertyChanging();
					this._phone_number = value;
					this.SendPropertyChanged("phone_number");
					this.Onphone_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_create_at", DbType="VarChar(255)")]
		public string create_at
		{
			get
			{
				return this._create_at;
			}
			set
			{
				if ((this._create_at != value))
				{
					this.Oncreate_atChanging(value);
					this.SendPropertyChanging();
					this._create_at = value;
					this.SendPropertyChanged("create_at");
					this.Oncreate_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_at", DbType="VarChar(255)")]
		public string update_at
		{
			get
			{
				return this._update_at;
			}
			set
			{
				if ((this._update_at != value))
				{
					this.Onupdate_atChanging(value);
					this.SendPropertyChanging();
					this._update_at = value;
					this.SendPropertyChanged("update_at");
					this.Onupdate_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role", DbType="Int NOT NULL")]
		public int role
		{
			get
			{
				return this._role;
			}
			set
			{
				if ((this._role != value))
				{
					if (this._role1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnroleChanging(value);
					this.SendPropertyChanging();
					this._role = value;
					this.SendPropertyChanged("role");
					this.OnroleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_background", DbType="VarChar(255)")]
		public string background
		{
			get
			{
				return this._background;
			}
			set
			{
				if ((this._background != value))
				{
					this.OnbackgroundChanging(value);
					this.SendPropertyChanging();
					this._background = value;
					this.SendPropertyChanged("background");
					this.OnbackgroundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_color", DbType="VarChar(255)")]
		public string color
		{
			get
			{
				return this._color;
			}
			set
			{
				if ((this._color != value))
				{
					this.OncolorChanging(value);
					this.SendPropertyChanging();
					this._color = value;
					this.SendPropertyChanged("color");
					this.OncolorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_history", Storage="_histories", ThisKey="id", OtherKey="id_employee_update")]
		public EntitySet<history> histories
		{
			get
			{
				return this._histories;
			}
			set
			{
				this._histories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="role_employee", Storage="_role1", ThisKey="role", OtherKey="id", IsForeignKey=true)]
		public role role1
		{
			get
			{
				return this._role1.Entity;
			}
			set
			{
				role previousValue = this._role1.Entity;
				if (((previousValue != value) 
							|| (this._role1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._role1.Entity = null;
						previousValue.employees.Remove(this);
					}
					this._role1.Entity = value;
					if ((value != null))
					{
						value.employees.Add(this);
						this._role = value.id;
					}
					else
					{
						this._role = default(int);
					}
					this.SendPropertyChanged("role1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_histories(history entity)
		{
			this.SendPropertyChanging();
			entity.employee = this;
		}
		
		private void detach_histories(history entity)
		{
			this.SendPropertyChanging();
			entity.employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.history")]
	public partial class history : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private double _total;
		
		private int _id_customer;
		
		private int _status;
		
		private int _payment_method;
		
		private string _update_at;
		
		private string _create_at;
		
		private System.Nullable<int> _id_employee_update;
		
		private string _trade_code;
		
		private EntitySet<history_detail> _history_details;
		
		private EntityRef<customer> _customer;
		
		private EntityRef<payment> _payment;
		
		private EntityRef<employee> _employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntotalChanging(double value);
    partial void OntotalChanged();
    partial void Onid_customerChanging(int value);
    partial void Onid_customerChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    partial void Onpayment_methodChanging(int value);
    partial void Onpayment_methodChanged();
    partial void Onupdate_atChanging(string value);
    partial void Onupdate_atChanged();
    partial void Oncreate_atChanging(string value);
    partial void Oncreate_atChanged();
    partial void Onid_employee_updateChanging(System.Nullable<int> value);
    partial void Onid_employee_updateChanged();
    partial void Ontrade_codeChanging(string value);
    partial void Ontrade_codeChanged();
    #endregion
		
		public history()
		{
			this._history_details = new EntitySet<history_detail>(new Action<history_detail>(this.attach_history_details), new Action<history_detail>(this.detach_history_details));
			this._customer = default(EntityRef<customer>);
			this._payment = default(EntityRef<payment>);
			this._employee = default(EntityRef<employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total", DbType="Float NOT NULL")]
		public double total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this.OntotalChanging(value);
					this.SendPropertyChanging();
					this._total = value;
					this.SendPropertyChanged("total");
					this.OntotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_customer", DbType="Int NOT NULL")]
		public int id_customer
		{
			get
			{
				return this._id_customer;
			}
			set
			{
				if ((this._id_customer != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_customerChanging(value);
					this.SendPropertyChanging();
					this._id_customer = value;
					this.SendPropertyChanged("id_customer");
					this.Onid_customerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_method", DbType="Int NOT NULL")]
		public int payment_method
		{
			get
			{
				return this._payment_method;
			}
			set
			{
				if ((this._payment_method != value))
				{
					if (this._payment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpayment_methodChanging(value);
					this.SendPropertyChanging();
					this._payment_method = value;
					this.SendPropertyChanged("payment_method");
					this.Onpayment_methodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_at", DbType="VarChar(255)")]
		public string update_at
		{
			get
			{
				return this._update_at;
			}
			set
			{
				if ((this._update_at != value))
				{
					this.Onupdate_atChanging(value);
					this.SendPropertyChanging();
					this._update_at = value;
					this.SendPropertyChanged("update_at");
					this.Onupdate_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_create_at", DbType="VarChar(255)")]
		public string create_at
		{
			get
			{
				return this._create_at;
			}
			set
			{
				if ((this._create_at != value))
				{
					this.Oncreate_atChanging(value);
					this.SendPropertyChanging();
					this._create_at = value;
					this.SendPropertyChanged("create_at");
					this.Oncreate_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_employee_update", DbType="Int")]
		public System.Nullable<int> id_employee_update
		{
			get
			{
				return this._id_employee_update;
			}
			set
			{
				if ((this._id_employee_update != value))
				{
					if (this._employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_employee_updateChanging(value);
					this.SendPropertyChanging();
					this._id_employee_update = value;
					this.SendPropertyChanged("id_employee_update");
					this.Onid_employee_updateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trade_code", DbType="VarChar(255)")]
		public string trade_code
		{
			get
			{
				return this._trade_code;
			}
			set
			{
				if ((this._trade_code != value))
				{
					this.Ontrade_codeChanging(value);
					this.SendPropertyChanging();
					this._trade_code = value;
					this.SendPropertyChanged("trade_code");
					this.Ontrade_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="history_history_detail", Storage="_history_details", ThisKey="id", OtherKey="id_history")]
		public EntitySet<history_detail> history_details
		{
			get
			{
				return this._history_details;
			}
			set
			{
				this._history_details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_history", Storage="_customer", ThisKey="id_customer", OtherKey="id", IsForeignKey=true)]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.histories.Remove(this);
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.histories.Add(this);
						this._id_customer = value.id;
					}
					else
					{
						this._id_customer = default(int);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="payment_history", Storage="_payment", ThisKey="payment_method", OtherKey="id", IsForeignKey=true)]
		public payment payment
		{
			get
			{
				return this._payment.Entity;
			}
			set
			{
				payment previousValue = this._payment.Entity;
				if (((previousValue != value) 
							|| (this._payment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._payment.Entity = null;
						previousValue.histories.Remove(this);
					}
					this._payment.Entity = value;
					if ((value != null))
					{
						value.histories.Add(this);
						this._payment_method = value.id;
					}
					else
					{
						this._payment_method = default(int);
					}
					this.SendPropertyChanged("payment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="employee_history", Storage="_employee", ThisKey="id_employee_update", OtherKey="id", IsForeignKey=true)]
		public employee employee
		{
			get
			{
				return this._employee.Entity;
			}
			set
			{
				employee previousValue = this._employee.Entity;
				if (((previousValue != value) 
							|| (this._employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._employee.Entity = null;
						previousValue.histories.Remove(this);
					}
					this._employee.Entity = value;
					if ((value != null))
					{
						value.histories.Add(this);
						this._id_employee_update = value.id;
					}
					else
					{
						this._id_employee_update = default(Nullable<int>);
					}
					this.SendPropertyChanged("employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_history_details(history_detail entity)
		{
			this.SendPropertyChanging();
			entity.history = this;
		}
		
		private void detach_history_details(history_detail entity)
		{
			this.SendPropertyChanging();
			entity.history = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.service")]
	public partial class service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private int _type_id;
		
		private double _price;
		
		private string _description;
		
		private int _id_mobile_network;
		
		private string _start_date;
		
		private string _end_date;
		
		private EntitySet<history_detail> _history_details;
		
		private EntityRef<type_service> _type_service;
		
		private EntityRef<mobile_network> _mobile_network;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Ontype_idChanging(int value);
    partial void Ontype_idChanged();
    partial void OnpriceChanging(double value);
    partial void OnpriceChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Onid_mobile_networkChanging(int value);
    partial void Onid_mobile_networkChanged();
    partial void Onstart_dateChanging(string value);
    partial void Onstart_dateChanged();
    partial void Onend_dateChanging(string value);
    partial void Onend_dateChanged();
    #endregion
		
		public service()
		{
			this._history_details = new EntitySet<history_detail>(new Action<history_detail>(this.attach_history_details), new Action<history_detail>(this.detach_history_details));
			this._type_service = default(EntityRef<type_service>);
			this._mobile_network = default(EntityRef<mobile_network>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(255)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type_id", DbType="Int NOT NULL")]
		public int type_id
		{
			get
			{
				return this._type_id;
			}
			set
			{
				if ((this._type_id != value))
				{
					if (this._type_service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontype_idChanging(value);
					this.SendPropertyChanging();
					this._type_id = value;
					this.SendPropertyChanged("type_id");
					this.Ontype_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Float NOT NULL")]
		public double price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_mobile_network", DbType="Int NOT NULL")]
		public int id_mobile_network
		{
			get
			{
				return this._id_mobile_network;
			}
			set
			{
				if ((this._id_mobile_network != value))
				{
					if (this._mobile_network.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_mobile_networkChanging(value);
					this.SendPropertyChanging();
					this._id_mobile_network = value;
					this.SendPropertyChanged("id_mobile_network");
					this.Onid_mobile_networkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_date", DbType="VarChar(255)")]
		public string start_date
		{
			get
			{
				return this._start_date;
			}
			set
			{
				if ((this._start_date != value))
				{
					this.Onstart_dateChanging(value);
					this.SendPropertyChanging();
					this._start_date = value;
					this.SendPropertyChanged("start_date");
					this.Onstart_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_date", DbType="VarChar(255)")]
		public string end_date
		{
			get
			{
				return this._end_date;
			}
			set
			{
				if ((this._end_date != value))
				{
					this.Onend_dateChanging(value);
					this.SendPropertyChanging();
					this._end_date = value;
					this.SendPropertyChanged("end_date");
					this.Onend_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="service_history_detail", Storage="_history_details", ThisKey="id", OtherKey="id_service")]
		public EntitySet<history_detail> history_details
		{
			get
			{
				return this._history_details;
			}
			set
			{
				this._history_details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="type_service_service", Storage="_type_service", ThisKey="type_id", OtherKey="id", IsForeignKey=true)]
		public type_service type_service
		{
			get
			{
				return this._type_service.Entity;
			}
			set
			{
				type_service previousValue = this._type_service.Entity;
				if (((previousValue != value) 
							|| (this._type_service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._type_service.Entity = null;
						previousValue.services.Remove(this);
					}
					this._type_service.Entity = value;
					if ((value != null))
					{
						value.services.Add(this);
						this._type_id = value.id;
					}
					else
					{
						this._type_id = default(int);
					}
					this.SendPropertyChanged("type_service");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="mobile_network_service", Storage="_mobile_network", ThisKey="id_mobile_network", OtherKey="id", IsForeignKey=true)]
		public mobile_network mobile_network
		{
			get
			{
				return this._mobile_network.Entity;
			}
			set
			{
				mobile_network previousValue = this._mobile_network.Entity;
				if (((previousValue != value) 
							|| (this._mobile_network.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mobile_network.Entity = null;
						previousValue.services.Remove(this);
					}
					this._mobile_network.Entity = value;
					if ((value != null))
					{
						value.services.Add(this);
						this._id_mobile_network = value.id;
					}
					else
					{
						this._id_mobile_network = default(int);
					}
					this.SendPropertyChanged("mobile_network");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_history_details(history_detail entity)
		{
			this.SendPropertyChanging();
			entity.service = this;
		}
		
		private void detach_history_details(history_detail entity)
		{
			this.SendPropertyChanging();
			entity.service = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.feedback")]
	public partial class feedback : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _type;
		
		private int _id_from;
		
		private System.Nullable<int> _id_to;
		
		private string _create_at;
		
		private string _content;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void Onid_fromChanging(int value);
    partial void Onid_fromChanged();
    partial void Onid_toChanging(System.Nullable<int> value);
    partial void Onid_toChanged();
    partial void Oncreate_atChanging(string value);
    partial void Oncreate_atChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    #endregion
		
		public feedback()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_from", DbType="Int NOT NULL")]
		public int id_from
		{
			get
			{
				return this._id_from;
			}
			set
			{
				if ((this._id_from != value))
				{
					this.Onid_fromChanging(value);
					this.SendPropertyChanging();
					this._id_from = value;
					this.SendPropertyChanged("id_from");
					this.Onid_fromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_to", DbType="Int")]
		public System.Nullable<int> id_to
		{
			get
			{
				return this._id_to;
			}
			set
			{
				if ((this._id_to != value))
				{
					this.Onid_toChanging(value);
					this.SendPropertyChanging();
					this._id_to = value;
					this.SendPropertyChanged("id_to");
					this.Onid_toChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_create_at", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string create_at
		{
			get
			{
				return this._create_at;
			}
			set
			{
				if ((this._create_at != value))
				{
					this.Oncreate_atChanging(value);
					this.SendPropertyChanging();
					this._create_at = value;
					this.SendPropertyChanged("create_at");
					this.Oncreate_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
